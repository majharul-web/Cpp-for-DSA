{
    "files.autoSave": "onFocusChange",
    "files.autoSaveDelay": 2000,
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.minimap.enabled": true,
    "[html]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "editor.formatOnSave": true,
    "prettier.printWidth": 110,
    "editor.wordWrap": "on",
    "editor.wordWrapColumn": 110,
    "css.styleSheets": [],
    "emmet.triggerExpansionOnTab": true,
    "files.associations": {
        "*html": "html"
    },
    "emmet.showSuggestionsAsSnippets": true,
    "liveServer.settings.donotShowInfoMsg": true,
    "liveServer.settings.donotVerifyTags": true,
    "javascript.updateImportsOnFileMove.enabled": "always",
    "[javascript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    // "[javascript]": {
    //   "editor.formatOnSave": false,
    //   "editor.defaultFormatter": null
    // },
    "editor.codeActionsOnSave": {
        "source.organizeImports": "explicit"
    },
    "[css]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "tailwindCSS.emmetCompletions": true,
    "liveServer.settings.AdvanceCustomBrowserCmdLine": "chrome",
    "prettier.endOfLine": "auto",
    "eslint.alwaysShowStatus": true,
    "window.openFoldersInNewWindow": "on",
    "emmet.includeLanguages": {
        "javascript": "javascriptreact"
    },
    "prettier.jsxSingleQuote": true,
    "editor.fontLigatures": true,
    "editor.fontFamily": "Fira Code",
    // "editor.fontFamily": " 'JetBrains Mono',Fira Code, victor mono",
    // for react-native error
    // "editor.inlineSuggest.enabled": true,
    // "[jsonc]": {
    //   "editor.defaultFormatter": "esbenp.prettier-vscode"
    // },
    // for sass
    "liveSassCompile.settings.formats": [
        {
            // "format": "compressed",
            // "extensionName": ".min.css",
            "extensionName": ".css",
            "savePath": "/css"
            // "savePath": "public/assets/css"
        }
    ],
    "liveSassCompile.settings.generateMap": false,
    "editor.fontWeight": "normal",
    "editor.autoClosingBrackets": "always",
    "editor.autoClosingQuotes": "always",
    "[json]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    "workbench.colorTheme": "Learn with Sumit - Peace of the eye - Dracula version",
    "cSpell.languageSettings": [],
    // terminal customization
    "terminal.integrated.fontSize": 14,
    "terminal.integrated.fontWeight": "normal",
    "terminal.integrated.fontFamily": "Fira Code, 'JetBrains Mono', victor mono",
    "workbench.colorCustomizations": {
        "terminal.background": "#1c1e2e",
        "terminal.foreground": "#A89984",
        "terminalCursor.background": "#A89984",
        "terminalCursor.foreground": "#A89984",
        "terminal.ansiBlack": "#1D2021",
        "terminal.ansiBlue": "#0D6678",
        "terminal.ansiBrightBlack": "#665C54",
        "terminal.ansiBrightBlue": "#0D6678",
        "terminal.ansiBrightCyan": "#8BA59B",
        "terminal.ansiBrightGreen": "#95C085",
        "terminal.ansiBrightMagenta": "#8F4673",
        "terminal.ansiBrightRed": "#FB543F",
        "terminal.ansiBrightWhite": "#FDF4C1",
        "terminal.ansiBrightYellow": "#FAC03B",
        "terminal.ansiCyan": "#8BA59B",
        "terminal.ansiGreen": "#95C085",
        "terminal.ansiMagenta": "#8F4673",
        "terminal.ansiRed": "#FB543F",
        "terminal.ansiWhite": "#A89984",
        "terminal.ansiYellow": "#FAC03B"
    },
    "liveSassCompile.settings.autoprefix": [],
    "[scss]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[javascriptreact]": {
        "editor.defaultFormatter": "vscode.typescript-language-features"
    },
    "[typescript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.tabSize": 2
    },
    "[prisma]": {
        "editor.defaultFormatter": "Prisma.prisma"
    },
    "terminal.integrated.shellIntegration.suggestEnabled": true,
    "terminal.integrated.defaultProfile.windows": "Git Bash",
    "github.copilot.enable": {
        "*": true,
        "plaintext": false,
        "markdown": false,
        "scminput": false,
        "cpp": false
    },
    "css.lint.unknownAtRules": "error",
    "workbench.settings.applyToAllProfiles": [],
    "terminal.integrated.env.windows": {},
    "editor.indentSize": "tabSize",
    "editor.fontSize": 15,
    "editor.tokenColorCustomizations": {},
    "editor.minimap.autohide": true,
    "editor.minimap.maxColumn": 30,
    "redhat.telemetry.enabled": true,
    "workbench.iconTheme": "material-icon-theme",
    "git.autofetch": true,
    "vs-kubernetes": {
        "vscode-kubernetes.helm-path-windows": "C:\\Users\\Dell XPS 15\\.vs-kubernetes\\tools\\helm\\windows-amd64\\helm.exe",
        "vscode-kubernetes.minikube-path-windows": "C:\\Users\\Dell XPS 15\\.vs-kubernetes\\tools\\minikube\\windows-amd64\\minikube.exe"
    },
    "githubPullRequests.pullBranch": "never",
    "console-ninja.featureSet": "Community",
    // Code Runner c program
    "C_Cpp.default.cppStandard": "c++20",
    "C_Cpp.default.compilerPath": "C:\\msys64\\ucrt64\\bin\\g++.exe",
    "C_Cpp.default.cStandard": "c11",
    "code-runner.runInTerminal": true,
    "code-runner.saveAllFilesBeforeRun": true,
    "code-runner.terminalRoot": "/",
    "code-runner.executorMapByGlob": {
        "pom.xml": "cd $dir && mvn clean package"
    },
    "code-runner.executorMap": {
        "javascript": "node",
        "java": "cd $dir && javac $fileName && java $fileNameWithoutExt",
        "zig": "zig run",
        "objective-c": "cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "php": "php",
        "python": "python -u",
        "perl": "perl",
        "perl6": "perl6",
        "ruby": "ruby",
        "go": "go run",
        "lua": "lua",
        "groovy": "groovy",
        "powershell": "powershell -ExecutionPolicy ByPass -File",
        "bat": "cmd /c",
        "shellscript": "bash",
        "fsharp": "fsi",
        "csharp": "scriptcs",
        "vbscript": "cscript //Nologo",
        "typescript": "ts-node",
        "coffeescript": "coffee",
        "scala": "scala",
        "swift": "swift",
        "julia": "julia",
        "crystal": "crystal",
        "ocaml": "ocaml",
        "r": "Rscript",
        "applescript": "osascript",
        "clojure": "lein exec",
        "haxe": "haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",
        "rust": "cd $dir && rustc $fileName && $dir$fileNameWithoutExt",
        "racket": "racket",
        "scheme": "csi -script",
        "ahk": "autohotkey",
        "autoit": "autoit3",
        "dart": "dart",
        "pascal": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
        "d": "cd $dir && dmd $fileName && $dir$fileNameWithoutExt",
        "haskell": "runghc",
        "nim": "nim compile --verbosity:0 --hints:off --run",
        "lisp": "sbcl --script",
        "kit": "kitc --run",
        "v": "v run",
        "sass": "sass --style expanded",
        "scss": "scss --style expanded",
        "less": "cd $dir && lessc $fileName $fileNameWithoutExt.css",
        "FortranFreeForm": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "fortran-modern": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "fortran_fixed-form": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "fortran": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "sml": "cd $dir && sml $fileName",
        //WITHOUT TEXT FILE
        "c": "cd $dir && gcc $fileName -o $fileNameWithoutExt.exe && $dir$fileNameWithoutExt.exe",
        "cpp": "cd $dir && g++ $fileName -o $fileNameWithoutExt.exe && $dir$fileNameWithoutExt.exe"
        //WITH TEXT FILE
        // "c": "cd $dir && gcc $fileName -o $fileNameWithoutExt.exe && timeout 15s $dir$fileNameWithoutExt.exe < input.txt > output.txt || (echo -n > output.txt && echo 'Time Limit Gone')",
        // "cpp": "cd $dir && g++ $fileName -o $fileNameWithoutExt.exe && timeout 15s $dir$fileNameWithoutExt.exe < input.txt > output.txt || (echo -n > output.txt && echo 'Time Limit Gone')",
    },
    "database-client.autoSync": true,
    "[cpp]": {
        "editor.defaultFormatter": "ms-vscode.cpptools"
    },
    "[snippets]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    }
}